R version 4.1.3 (2022-03-10) -- "One Push-Up"Copyright (C) 2022 The R Foundation for Statistical ComputingPlatform: aarch64-apple-darwin20 (64-bit)R is free software and comes with ABSOLUTELY NO WARRANTY.You are welcome to redistribute it under certain conditions.Type 'license()' or 'licence()' for distribution details.  Natural language support but running in an English localeR is a collaborative project with many contributors.Type 'contributors()' for more information and'citation()' on how to cite R or R packages in publications.Type 'demo()' for some demos, 'help()' for on-line help, or'help.start()' for an HTML browser interface to help.Type 'q()' to quit R.> ## Replication code for:> ## Moderator Placement in Survey Experiments: > ## Racial Resentment and the “Welfare” vs. > ## “Assistance to the Poor” Question Wording Experiment> ##> ## Bethany Albertson and Stephen Jessee> ##> ## Journal of Experimental Political Science> ##> > ## NOTE: requires packages rio, mice, stargazer and car > ##       to be installed prior to running code below> > # loading data> library(rio)> DAT <- import("raw_data.dta")> > #####################################> ## creating variables for analysis ##> #####################################> > > # creating indicator for welfare/aid to poor > # question wording> DAT$welfare_word <- NA> DAT$welfare_word[!is.na(DAT$Q32)] <- 1> DAT$welfare_word[!is.na(DAT$Q33)] <- 0> > # creating welfare/assistance to the poor spending > # response, combining across question wordings> DAT$spend <- ifelse(DAT$welfare_word==1, c(1, -1, 0)[DAT$Q32],+                     ifelse(DAT$welfare_word==0, c(1, -1, 0)[DAT$Q33], NA))> > # dropping the 1 observation with everything missing> DAT <- subset(DAT, !is.na(spend))> > # dummy for asking RR battery post-experiment> DAT$rr_post <- 1 - DAT$race_first> > # racial resentment scale> # first recoding each item > DAT$rr1.raw <- (5 - DAT$Q22) / 4> DAT$rr2.raw <- (DAT$Q23 - 1) / 4> DAT$rr3.raw <- (DAT$Q24 - 1) / 4> DAT$rr4.raw <- (5 - DAT$Q25) / 4> > # imputing missing RR items > library(mice)Attaching package: ‘mice’The following object is masked from ‘package:stats’:    filterThe following objects are masked from ‘package:base’:    cbind, rbind> RRmice <- mice(cbind(DAT$rr1.raw, DAT$rr2.raw, DAT$rr3.raw, DAT$rr4.raw),+                   seed=12345, method="pmm", maxit=100, m=10, print=FALSE)> RRimputed <- complete(RRmice)> > DAT$rr1 <- RRimputed[,1]> DAT$rr2 <- RRimputed[,2]> DAT$rr3 <- RRimputed[,3]> DAT$rr4 <- RRimputed[,4]> > # RR scale> DAT$rr_scale <- (DAT$rr1 + DAT$rr2 + DAT$rr3 + DAT$rr4) / 4> > > #############> ## TABLE 1 ##> #############> > # Model 1> reg11 <- lm(spend ~ welfare_word, data=DAT)> summary(reg11)Call:lm(formula = spend ~ welfare_word, data = DAT)Residuals:    Min      1Q  Median      3Q     Max -0.8554 -0.5887  0.1447  0.4113  1.4113 Coefficients:             Estimate Std. Error t value Pr(>|t|)    (Intercept)  -0.41132    0.02793 -14.727  < 2e-16 ***welfare_word  0.26667    0.03950   6.751 2.05e-11 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.7875 on 1588 degrees of freedomMultiple R-squared:  0.0279,	Adjusted R-squared:  0.02729 F-statistic: 45.58 on 1 and 1588 DF,  p-value: 2.051e-11> > # Model 2> reg12 <- lm(spend ~ welfare_word + rr_scale, data=DAT)> summary(reg12)Call:lm(formula = spend ~ welfare_word + rr_scale, data = DAT)Residuals:     Min       1Q   Median       3Q      Max -1.75025 -0.38505 -0.02215  0.45975  1.91481 Coefficients:             Estimate Std. Error t value Pr(>|t|)    (Intercept)  -1.00583    0.03029 -33.207   <2e-16 ***welfare_word  0.29987    0.03184   9.417   <2e-16 ***rr_scale      1.45621    0.04967  29.321   <2e-16 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6345 on 1587 degrees of freedomMultiple R-squared:  0.3695,	Adjusted R-squared:  0.3687 F-statistic:   465 on 2 and 1587 DF,  p-value: < 2.2e-16> > # Model 3> reg13 <- lm(spend ~ welfare_word*rr_scale, data=DAT)> summary(reg13)Call:lm(formula = spend ~ welfare_word * rr_scale, data = DAT)Residuals:     Min       1Q   Median       3Q      Max -1.87100 -0.38604 -0.06591  0.43888  1.85406 Coefficients:                      Estimate Std. Error t value Pr(>|t|)    (Intercept)           -0.93409    0.03570 -26.164  < 2e-16 ***welfare_word           0.15239    0.05046   3.020 0.002570 ** rr_scale               1.28049    0.06807  18.810  < 2e-16 ***welfare_word:rr_scale  0.37221    0.09908   3.757 0.000178 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6318 on 1586 degrees of freedomMultiple R-squared:  0.375,	Adjusted R-squared:  0.3738 F-statistic: 317.2 on 3 and 1586 DF,  p-value: < 2.2e-16> > # outputting to formatted txt table> library(stargazer)Please cite as:  Hlavac, Marek (2022). stargazer: Well-Formatted Regression and Summary Statistics Tables. R package version 5.2.3. https://CRAN.R-project.org/package=stargazer > stargazer(reg11, reg12, reg13, +           digits=2, intercept.bottom=FALSE,+           type="text", out="Table1.txt")===============================================================================================                                                 Dependent variable:                                                 -------------------------------------------------------------------------                                                        spend                                                                  (1)                     (2)                      (3)           -----------------------------------------------------------------------------------------------Constant                     -0.41***                 -1.01***                 -0.93***                                      (0.03)                   (0.03)                   (0.04)                                                                                                        welfare_word                  0.27***                 0.30***                  0.15***                                       (0.04)                   (0.03)                   (0.05)                                                                                                        rr_scale                                              1.46***                  1.28***                                                                (0.05)                   (0.07)                                                                                                        welfare_word:rr_scale                                                          0.37***                                                                                         (0.10)                                                                                                        -----------------------------------------------------------------------------------------------Observations                   1,590                   1,590                    1,590          R2                             0.03                     0.37                     0.38          Adjusted R2                    0.03                     0.37                     0.37          Residual Std. Error      0.79 (df = 1588)         0.63 (df = 1587)         0.63 (df = 1586)    F Statistic           45.58*** (df = 1; 1588) 464.96*** (df = 2; 1587) 317.24*** (df = 3; 1586)===============================================================================================Note:                                                               *p<0.1; **p<0.05; ***p<0.01> > > #############> ## TABLE 2 ##> #############> > # Model 1> reg21 <- lm(spend ~ welfare_word*rr_post,+            data=DAT)> summary(reg21)Call:lm(formula = spend ~ welfare_word * rr_post, data = DAT)Residuals:    Min      1Q  Median      3Q     Max -0.8886 -0.6019  0.1114  0.4259  1.4259 Coefficients:                     Estimate Std. Error t value Pr(>|t|)    (Intercept)          -0.39808    0.03857 -10.322  < 2e-16 ***welfare_word          0.28671    0.05438   5.272 1.53e-07 ***rr_post              -0.02784    0.05593  -0.498    0.619    welfare_word:rr_post -0.04309    0.07913  -0.545    0.586    ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.7876 on 1586 degrees of freedomMultiple R-squared:  0.02904,	Adjusted R-squared:  0.0272 F-statistic: 15.81 on 3 and 1586 DF,  p-value: 3.935e-10> > # Model 2> reg22 <- lm(spend ~ welfare_word*rr_post*rr_scale,+             data=DAT)> summary(reg22)Call:lm(formula = spend ~ welfare_word * rr_post * rr_scale, data = DAT)Residuals:    Min      1Q  Median      3Q     Max -1.9304 -0.4037 -0.1137  0.4371  1.8138 Coefficients:                              Estimate Std. Error t value Pr(>|t|)    (Intercept)                   -0.98554    0.05098 -19.331   <2e-16 ***welfare_word                   0.19615    0.07143   2.746   0.0061 ** rr_post                        0.09921    0.07141   1.389   0.1650    rr_scale                       1.40334    0.09681  14.496   <2e-16 ***welfare_word:rr_post          -0.08424    0.10093  -0.835   0.4041    welfare_word:rr_scale          0.31642    0.13926   2.272   0.0232 *  rr_post:rr_scale              -0.24311    0.13619  -1.785   0.0744 .  welfare_word:rr_post:rr_scale  0.10023    0.19826   0.506   0.6133    ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6317 on 1582 degrees of freedomMultiple R-squared:  0.377,	Adjusted R-squared:  0.3742 F-statistic: 136.8 on 7 and 1582 DF,  p-value: < 2.2e-16> > # outputting to nice txt table> # NOTE: R's ordering of coefficients in Model 2> #       differs slightly from that in the text> stargazer(reg21, reg22,+           digits=2, intercept.bottom=FALSE,+           type="text", out="Table2.txt")==============================================================================                                            Dependent variable:                                             ------------------------------------------------                                                   spend                                                              (1)                     (2)           ------------------------------------------------------------------------------Constant                             -0.40***                 -0.99***                                              (0.04)                   (0.05)                                                                                       welfare_word                          0.29***                 0.20***                                               (0.05)                   (0.07)                                                                                       rr_post                                -0.03                    0.10                                                (0.06)                   (0.07)                                                                                       rr_scale                                                      1.40***                                                                        (0.10)                                                                                       welfare_word:rr_post                   -0.04                   -0.08                                                (0.08)                   (0.10)                                                                                       welfare_word:rr_scale                                          0.32**                                                                        (0.14)                                                                                       rr_post:rr_scale                                               -0.24*                                                                        (0.14)                                                                                       welfare_word:rr_post:rr_scale                                   0.10                                                                         (0.20)                                                                                       ------------------------------------------------------------------------------Observations                           1,590                   1,590          R2                                     0.03                     0.38          Adjusted R2                            0.03                     0.37          Residual Std. Error              0.79 (df = 1586)         0.63 (df = 1582)    F Statistic                   15.81*** (df = 3; 1586) 136.75*** (df = 7; 1582)==============================================================================Note:                                              *p<0.1; **p<0.05; ***p<0.01> > #############> ## TABLE 3 ##> #############> > # Model 1> reg31 <- lm(rr_scale ~ rr_post + I(rr_post*welfare_word),+            data=DAT)> summary(reg31)Call:lm(formula = rr_scale ~ rr_post + I(rr_post * welfare_word),     data = DAT)Residuals:     Min       1Q   Median       3Q      Max -0.40636 -0.28136 -0.03136  0.24950  0.62450 Coefficients:                           Estimate Std. Error t value Pr(>|t|)    (Intercept)                0.406362   0.011069  36.710   <2e-16 ***rr_post                   -0.009536   0.019862  -0.480    0.631    I(rr_post * welfare_word) -0.021323   0.023401  -0.911    0.362    ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.3206 on 1587 degrees of freedomMultiple R-squared:  0.001505,	Adjusted R-squared:  0.0002465 F-statistic: 1.196 on 2 and 1587 DF,  p-value: 0.3027> > # outputting to nice txt table> stargazer(reg31,+           digits=2, intercept.bottom=FALSE,+           type="text", out="Table3.txt")=====================================================                              Dependent variable:                              ---------------------------                                   rr_scale          -----------------------------------------------------Constant                            0.41***                                              (0.01)                                                                rr_post                              -0.01                                               (0.02)                                                                I(rr_post * welfare_word)            -0.02                                               (0.02)                                                                -----------------------------------------------------Observations                         1,590           R2                                   0.002           Adjusted R2                         0.0002           Residual Std. Error            0.32 (df = 1587)      F Statistic                   1.20 (df = 2; 1587)    =====================================================Note:                     *p<0.1; **p<0.05; ***p<0.01> > # test of linear hypothesis that difference in > # racial resentment between those receiving the > # racial resentment battery first and those > # receiving it afterwards who were shown the > # “welfare” wording is equal to zero based on > # linear regression model in Table 3> library(car)Loading required package: carData> linearHypothesis(reg31, "1*rr_post + 1*I(rr_post * welfare_word) = 0")Linear hypothesis testHypothesis:rr_post  + I(rr_post * welfare_word) = 0Model 1: restricted modelModel 2: rr_scale ~ rr_post + I(rr_post * welfare_word)  Res.Df    RSS Df Sum of Sq      F Pr(>F)1   1588 163.40                           2   1587 163.15  1   0.24589 2.3918 0.1222> > > ##############> ## TABLE A1 ##> ##############> > # proportion female> mean(DAT$Q72==2, na.rm=TRUE)[1] 0.5529634> > # proportion Democrat (with leaners)> DAT$pid7 <- ifelse(DAT$Q61==1, DAT$Q62,+                    ifelse(DAT$Q61==2, 8-DAT$Q63,+                           ifelse(DAT$Q61==3, c(5,3,4)[DAT$Q64], NA)))> mean(DAT$pid7 %in% 1:3)[1] 0.5515723> > # proportion Republican (with leaners)> mean(DAT$pid7 %in% 5:7)[1] 0.3119497> > # proportion College or higher> mean(DAT$Q73 >= 5, na.rm=TRUE)[1] 0.552615> > # proportion White (alone)> mean(DAT$Q75 == 1, na.rm=TRUE)[1] 0.709434> > # proportion African American (alone)> mean(DAT$Q75 == 2, na.rm=TRUE)[1] 0.1018868> > # proportion Asian American (alone)> mean(DAT$Q75 == 4, na.rm=TRUE)[1] 0.07484277> > # proportion liberal or slightly liberal> mean(DAT$Q77 %in% 1:2)[1] 0.4735849> > # proportion conservative or slightly conservative> mean(DAT$Q77 %in% 4:5)[1] 0.2830189> > > ###############> ## FIGURE A1 ##> ###############> > # plotting histograms of rr_scale> # for each of these three groups> pdf("FigA1.pdf",+     height=8, width=5)> par(mfrow=c(3,1))> hist(DAT$rr_scale[DAT$rr_post==0],+      breaks=seq(0 - .0625/2, 1 + .0625/2, by=.0625),+      main="RR measured first",+      xlab="racial resentment scale", freq=FALSE)> hist(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0],+      breaks=seq(0 - .0625/2, 1 + .0625/2, by=.0625),+      main="RR measured last, \"assistance to the poor\" wording",+      xlab="racial resentment scale", freq=FALSE)> hist(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1],+      breaks=seq(0 - .0625/2, 1 + .0625/2, by=.0625),+      main="RR measured last, \"welfare\" wording",+      xlab="racial resentment scale", freq=FALSE)> dev.off()null device           1 > > ## empirical CDF plots> pdf("FigA2.pdf",+     height=7, width=7)> par(mfrow=c(1,1), pty="s")> plot(ecdf(DAT$rr_scale[DAT$rr_post==0]), verticals=TRUE, do.points=FALSE,+      lwd=2, bty="n", main="",+      xlab="racial resentment score", +      ylab="empirical CDF")> lines(ecdf(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1]),+       verticals=TRUE, do.points=FALSE,+       lty=3, lwd=2)> lines(ecdf(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0]),+       verticals=TRUE, do.points=FALSE,+       col="gray", lwd=2)> legend(.4, .2, #'bottomright', +        c("RR first", +          "RR last, \"welfare\" wording", +          "RR last, \"assistance\" wording"),+        lty=c(1,3,1), lwd=2,+        col=c("black", "black", "gray"))> dev.off()null device           1 > > > ##############> ## TABLE A2 ##> ##############> > # NOTE: Coefficients are printed by R all together for each> #       model, not side by side as in appendix table> > # Model 1> regA21 <- lm(spend ~ -1 + rr_post + I(welfare_word*rr_post) + +                I(1-rr_post) + I(welfare_word*(1-rr_post)), +              data=DAT)> summary(regA21)Call:lm(formula = spend ~ -1 + rr_post + I(welfare_word * rr_post) +     I(1 - rr_post) + I(welfare_word * (1 - rr_post)), data = DAT)Residuals:    Min      1Q  Median      3Q     Max -0.8886 -0.6019  0.1114  0.4259  1.4259 Coefficients:                                Estimate Std. Error t value Pr(>|t|)    rr_post                         -0.42593    0.04051 -10.515  < 2e-16 ***I(welfare_word * rr_post)        0.24362    0.05748   4.238 2.38e-05 ***I(1 - rr_post)                  -0.39808    0.03857 -10.322  < 2e-16 ***I(welfare_word * (1 - rr_post))  0.28671    0.05438   5.272 1.53e-07 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.7876 on 1586 degrees of freedomMultiple R-squared:  0.1341,	Adjusted R-squared:  0.1319 F-statistic: 61.38 on 4 and 1586 DF,  p-value: < 2.2e-16> # Interactive version of Model 1> # to get p-values for tests of equality> # of coefficients between pre- vs post-RR> regA21.interact <- lm(spend ~ rr_post*welfare_word, +                      data=DAT)> summary(regA21.interact)Call:lm(formula = spend ~ rr_post * welfare_word, data = DAT)Residuals:    Min      1Q  Median      3Q     Max -0.8886 -0.6019  0.1114  0.4259  1.4259 Coefficients:                     Estimate Std. Error t value Pr(>|t|)    (Intercept)          -0.39808    0.03857 -10.322  < 2e-16 ***rr_post              -0.02784    0.05593  -0.498    0.619    welfare_word          0.28671    0.05438   5.272 1.53e-07 ***rr_post:welfare_word -0.04309    0.07913  -0.545    0.586    ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.7876 on 1586 degrees of freedomMultiple R-squared:  0.02904,	Adjusted R-squared:  0.0272 F-statistic: 15.81 on 3 and 1586 DF,  p-value: 3.935e-10> # testing hypothesis that pre-post coeffs are equal> anova(reg11, regA21)Analysis of Variance TableModel 1: spend ~ welfare_wordModel 2: spend ~ -1 + rr_post + I(welfare_word * rr_post) + I(1 - rr_post) +     I(welfare_word * (1 - rr_post))  Res.Df    RSS Df Sum of Sq     F Pr(>F)1   1588 984.86                          2   1586 983.71  2    1.1499 0.927  0.396> > # Model 2> regA22 <- lm(spend ~ -1 + rr_post + I(welfare_word*rr_post) + I(rr_scale*rr_post) ++                I(1-rr_post) + I(welfare_word*(1-rr_post)) + I(rr_scale*(1-rr_post)), +              data=DAT)> summary(regA22)Call:lm(formula = spend ~ -1 + rr_post + I(welfare_word * rr_post) +     I(rr_scale * rr_post) + I(1 - rr_post) + I(welfare_word *     (1 - rr_post)) + I(rr_scale * (1 - rr_post)), data = DAT)Residuals:     Min       1Q   Median       3Q      Max -1.83132 -0.38970 -0.03748  0.46048  1.87801 Coefficients:                                Estimate Std. Error t value Pr(>|t|)    rr_post                         -0.96252    0.04299 -22.388  < 2e-16 ***I(welfare_word * rr_post)        0.27245    0.04630   5.885 4.85e-09 ***I(rr_scale * rr_post)            1.35221    0.07060  19.153  < 2e-16 ***I(1 - rr_post)                  -1.04955    0.04265 -24.608  < 2e-16 ***I(welfare_word * (1 - rr_post))  0.32462    0.04381   7.410 2.05e-13 ***I(rr_scale * (1 - rr_post))      1.55625    0.06985  22.279  < 2e-16 ***---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.634 on 1584 degrees of freedomMultiple R-squared:  0.4395,	Adjusted R-squared:  0.4374 F-statistic:   207 on 6 and 1584 DF,  p-value: < 2.2e-16> # Interactive version of Model 2> # to get p-values for tests of equality> # of coefficients between pre- vs post-RR> regA22.interact <- lm(spend ~ rr_post * (welfare_word + rr_scale), +                      data=DAT)> summary(regA22.interact)Call:lm(formula = spend ~ rr_post * (welfare_word + rr_scale), data = DAT)Residuals:     Min       1Q   Median       3Q      Max -1.83132 -0.38970 -0.03748  0.46048  1.87801 Coefficients:                     Estimate Std. Error t value Pr(>|t|)    (Intercept)          -1.04955    0.04265 -24.608  < 2e-16 ***rr_post               0.08703    0.06056   1.437   0.1509    welfare_word          0.32462    0.04381   7.410 2.05e-13 ***rr_scale              1.55625    0.06985  22.279  < 2e-16 ***rr_post:welfare_word -0.05217    0.06374  -0.818   0.4132    rr_post:rr_scale     -0.20404    0.09932  -2.054   0.0401 *  ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.634 on 1584 degrees of freedomMultiple R-squared:  0.3715,	Adjusted R-squared:  0.3695 F-statistic: 187.3 on 5 and 1584 DF,  p-value: < 2.2e-16> # testing hypothesis that pre-post coeffs are equal> anova(reg12, regA22)Analysis of Variance TableModel 1: spend ~ welfare_word + rr_scaleModel 2: spend ~ -1 + rr_post + I(welfare_word * rr_post) + I(rr_scale *     rr_post) + I(1 - rr_post) + I(welfare_word * (1 - rr_post)) +     I(rr_scale * (1 - rr_post))  Res.Df    RSS Df Sum of Sq      F Pr(>F)1   1587 638.81                           2   1584 636.73  3    2.0765 1.7219 0.1605> > # Model 3> regA23 <- lm(spend ~ -1 + rr_post + I(welfare_word*rr_post) + +                I(rr_scale*rr_post) + I(welfare_word*rr_scale*rr_post) ++                I(1-rr_post) + I(welfare_word*(1-rr_post)) + +                I(rr_scale*(1-rr_post)) + I(welfare_word*rr_scale*(1-rr_post)), +              data=DAT)> summary(regA23)Call:lm(formula = spend ~ -1 + rr_post + I(welfare_word * rr_post) +     I(rr_scale * rr_post) + I(welfare_word * rr_scale * rr_post) +     I(1 - rr_post) + I(welfare_word * (1 - rr_post)) + I(rr_scale *     (1 - rr_post)) + I(welfare_word * rr_scale * (1 - rr_post)),     data = DAT)Residuals:    Min      1Q  Median      3Q     Max -1.9304 -0.4037 -0.1137  0.4371  1.8138 Coefficients:                                           Estimate Std. Error t value Pr(>|t|)    rr_post                                    -0.88633    0.05000 -17.725   <2e-16 ***I(welfare_word * rr_post)                   0.11191    0.07130   1.570   0.1167    I(rr_scale * rr_post)                       1.16023    0.09579  12.112   <2e-16 ***I(welfare_word * rr_scale * rr_post)        0.41664    0.14111   2.953   0.0032 ** I(1 - rr_post)                             -0.98554    0.05098 -19.331   <2e-16 ***I(welfare_word * (1 - rr_post))             0.19615    0.07143   2.746   0.0061 ** I(rr_scale * (1 - rr_post))                 1.40334    0.09681  14.496   <2e-16 ***I(welfare_word * rr_scale * (1 - rr_post))  0.31642    0.13926   2.272   0.0232 *  ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6317 on 1582 degrees of freedomMultiple R-squared:  0.4444,	Adjusted R-squared:  0.4416 F-statistic: 158.2 on 8 and 1582 DF,  p-value: < 2.2e-16> # Interactive version of Model 2> # to get p-values for tests of equality> # of coefficients between pre- vs post-RR> regA23.interact <- lm(spend ~ rr_post * (welfare_word*rr_scale),+                      data=DAT)> summary(regA23.interact)Call:lm(formula = spend ~ rr_post * (welfare_word * rr_scale), data = DAT)Residuals:    Min      1Q  Median      3Q     Max -1.9304 -0.4037 -0.1137  0.4371  1.8138 Coefficients:                              Estimate Std. Error t value Pr(>|t|)    (Intercept)                   -0.98554    0.05098 -19.331   <2e-16 ***rr_post                        0.09921    0.07141   1.389   0.1650    welfare_word                   0.19615    0.07143   2.746   0.0061 ** rr_scale                       1.40334    0.09681  14.496   <2e-16 ***welfare_word:rr_scale          0.31642    0.13926   2.272   0.0232 *  rr_post:welfare_word          -0.08424    0.10093  -0.835   0.4041    rr_post:rr_scale              -0.24311    0.13619  -1.785   0.0744 .  rr_post:welfare_word:rr_scale  0.10023    0.19826   0.506   0.6133    ---Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1Residual standard error: 0.6317 on 1582 degrees of freedomMultiple R-squared:  0.377,	Adjusted R-squared:  0.3742 F-statistic: 136.8 on 7 and 1582 DF,  p-value: < 2.2e-16> # testing hypothesis that pre-post coeffs are equal> anova(reg13, regA23)Analysis of Variance TableModel 1: spend ~ welfare_word * rr_scaleModel 2: spend ~ -1 + rr_post + I(welfare_word * rr_post) + I(rr_scale *     rr_post) + I(welfare_word * rr_scale * rr_post) + I(1 - rr_post) +     I(welfare_word * (1 - rr_post)) + I(rr_scale * (1 - rr_post)) +     I(welfare_word * rr_scale * (1 - rr_post))  Res.Df    RSS Df Sum of Sq      F Pr(>F)1   1586 633.18                           2   1582 631.20  4    1.9799 1.2406 0.2917> > > > > > ##############> ## TABLE A3 ##> #######################################################################> # Komolgorov-Smirnof test of RR dist b/t                             ##> # 3 groups: POST_RR==0, (rr_post==1 & welfare_word==0)               ##> # (rr_post==1 & welfare_word==0), and (rr_post==1 & welfare_word==1) ##> #######################################################################> > ## loading permutation-based KS test function in separate code file> source("permutation ks test function.R")> > # setting random seed so permuation test p-vals> # will replicate> set.seed(78712)> > # respondents who were asked RR battery first> # compared with > # respondents asked RR battery after who had> # "assistance to the poor" question wording> ks.test(DAT$rr_scale[DAT$rr_post==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0])	Two-sample Kolmogorov-Smirnov testdata:  DAT$rr_scale[DAT$rr_post == 0] and DAT$rr_scale[DAT$rr_post == 1 & DAT$welfare_word == 0]D = 0.062105, p-value = 0.2673alternative hypothesis: two-sidedWarning message:In ks.test(DAT$rr_scale[DAT$rr_post == 0], DAT$rr_scale[DAT$rr_post ==  :  p-value will be approximate in the presence of ties> ks.perm(DAT$rr_scale[DAT$rr_post==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0],+         reps=100000) Two-sample Komolgorov-Smirnov test  with permuation-based p-value  p =  0.14801 > > # respondents who were asked RR battery first> # compared with > # respondents asked RR battery after who had> # "welfare" question wording> ks.test(DAT$rr_scale[DAT$rr_post==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1])	Two-sample Kolmogorov-Smirnov testdata:  DAT$rr_scale[DAT$rr_post == 0] and DAT$rr_scale[DAT$rr_post == 1 & DAT$welfare_word == 1]D = 0.055482, p-value = 0.4045alternative hypothesis: two-sidedWarning message:In ks.test(DAT$rr_scale[DAT$rr_post == 0], DAT$rr_scale[DAT$rr_post ==  :  p-value will be approximate in the presence of ties> ks.perm(DAT$rr_scale[DAT$rr_post==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1],+         reps=100000) Two-sample Komolgorov-Smirnov test  with permuation-based p-value  p =  0.2393 > > # respondents asked RR battery after who had> # "assistance to the poor" question wording> # compared with > # respondents asked RR battery after who had> # "welfare" question wording> ks.test(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1])	Two-sample Kolmogorov-Smirnov testdata:  DAT$rr_scale[DAT$rr_post == 1 & DAT$welfare_word == 0] and DAT$rr_scale[DAT$rr_post == 1 & DAT$welfare_word == 1]D = 0.076032, p-value = 0.2279alternative hypothesis: two-sidedWarning message:In ks.test(DAT$rr_scale[DAT$rr_post == 1 & DAT$welfare_word == 0],  :  p-value will be approximate in the presence of ties> ks.perm(DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==0],+         DAT$rr_scale[DAT$rr_post==1 & DAT$welfare_word==1],+         reps=100000) Two-sample Komolgorov-Smirnov test  with permuation-based p-value  p =  0.12666 